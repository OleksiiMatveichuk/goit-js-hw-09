{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaH,EAAKE,cAAc,kBAChCE,EAAYJ,EAAKE,cAAc,iBAC/BG,EAAcL,EAAKE,cAAc,mBACtBF,EAAKE,cAAc,UAWpCF,EAAKM,iBAAiB,UAAU,SAAAC,GAC9BA,EAAGC,iBACWL,EAAWM,MACZL,EAAUK,MACRJ,EAAYI,OAb7B,SAAuBC,EAAUC,GACTC,KAAKC,SAAW,GAEpCC,EAAAhB,GAASiB,OAAOC,QAAQ,qBAAoCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,OAElEG,EAAAhB,GAASiB,OAAOG,QAAQ,oBAAmCD,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,CAUnEQ,GAEAZ,EAAGa,cAAcC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst inputDelay = form.querySelector('[name=\"delay\"]');\nconst inputStep = form.querySelector('[name=\"step\"]');\nconst inputAmount = form.querySelector('[name=\"amount\"]');\nconst btnStart = form.querySelector('button');\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  if (shouldResolve) {\n    Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  } else {\n    Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  }\n}\n\nform.addEventListener('submit', ev => {\n  ev.preventDefault();\n  const delay = inputDelay.value;\n  const step = inputStep.value;\n  const amount = inputAmount.value;\n\n  createPromise();\n\n  ev.currentTarget.reset();\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","addEventListener","ev","preventDefault","value","position","delay","Math","random","$parcel$interopDefault","Notify","success","concat","failure","$ce04d3a99e08e73b$var$createPromise","currentTarget","reset"],"version":3,"file":"03-promises.40450101.js.map"}